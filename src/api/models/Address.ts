/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * Client number and street
     * @type {string}
     * @memberof Address
     */
    street?: string;
    /**
     * Client Postcode/ZIP
     * @type {string}
     * @memberof Address
     */
    postCode?: string;
    /**
     * Client city
     * @type {string}
     * @memberof Address
     */
    city?: string;
    /**
     * Client country using ISO 3166-1 alpha-3
     * @type {string}
     * @memberof Address
     */
    country: string;
}

/**
 * Check if a given object implements the Address interface.
 */
export function instanceOfAddress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "country" in value;

    return isInstance;
}

export function AddressFromJSON(json: any): Address {
    return AddressFromJSONTyped(json, false);
}

export function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'street': !exists(json, 'street') ? undefined : json['street'],
        'postCode': !exists(json, 'postCode') ? undefined : json['postCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'country': json['country'],
    };
}

export function AddressToJSON(value?: Address | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'street': value.street,
        'postCode': value.postCode,
        'city': value.city,
        'country': value.country,
    };
}

