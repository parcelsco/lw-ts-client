/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';

/**
 * 
 * @export
 * @interface Links
 */
export interface Links {
    /**
     * 
     * @type {Link}
     * @memberof Links
     */
    first?: Link;
    /**
     * 
     * @type {Link}
     * @memberof Links
     */
    last?: Link;
    /**
     * 
     * @type {Link}
     * @memberof Links
     */
    previous?: Link;
    /**
     * 
     * @type {Link}
     * @memberof Links
     */
    next?: Link;
    /**
     * 
     * @type {Link}
     * @memberof Links
     */
    self?: Link;
}

/**
 * Check if a given object implements the Links interface.
 */
export function instanceOfLinks(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LinksFromJSON(json: any): Links {
    return LinksFromJSONTyped(json, false);
}

export function LinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Links {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'first': !exists(json, 'first') ? undefined : LinkFromJSON(json['first']),
        'last': !exists(json, 'last') ? undefined : LinkFromJSON(json['last']),
        'previous': !exists(json, 'previous') ? undefined : LinkFromJSON(json['previous']),
        'next': !exists(json, 'next') ? undefined : LinkFromJSON(json['next']),
        'self': !exists(json, 'self') ? undefined : LinkFromJSON(json['self']),
    };
}

export function LinksToJSON(value?: Links | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'first': LinkToJSON(value.first),
        'last': LinkToJSON(value.last),
        'previous': LinkToJSON(value.previous),
        'next': LinkToJSON(value.next),
        'self': LinkToJSON(value.self),
    };
}

