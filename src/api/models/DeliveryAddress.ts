/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeliveryAddress
 */
export interface DeliveryAddress {
    /**
     * Client City
     * @type {string}
     * @memberof DeliveryAddress
     */
    city?: string;
    /**
     * Client country using ISO 3166-1 alpha-3
     * @type {string}
     * @memberof DeliveryAddress
     */
    country?: string;
    /**
     * Client Number and Street
     * @type {string}
     * @memberof DeliveryAddress
     */
    addressAdditional1?: string;
    /**
     * Client Number and Street
     * @type {string}
     * @memberof DeliveryAddress
     */
    addressAdditional2?: string;
    /**
     * Client Number and Street
     * @type {string}
     * @memberof DeliveryAddress
     */
    addressAdditional3?: string;
    /**
     * Client Postal Code/ZIP
     * @type {string}
     * @memberof DeliveryAddress
     */
    zipCode?: string;
    /**
     * Client State
     * @type {string}
     * @memberof DeliveryAddress
     */
    state?: string;
}

/**
 * Check if a given object implements the DeliveryAddress interface.
 */
export function instanceOfDeliveryAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DeliveryAddressFromJSON(json: any): DeliveryAddress {
    return DeliveryAddressFromJSONTyped(json, false);
}

export function DeliveryAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeliveryAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'city': !exists(json, 'city') ? undefined : json['city'],
        'country': !exists(json, 'Country') ? undefined : json['Country'],
        'addressAdditional1': !exists(json, 'addressAdditional1') ? undefined : json['addressAdditional1'],
        'addressAdditional2': !exists(json, 'addressAdditional2') ? undefined : json['addressAdditional2'],
        'addressAdditional3': !exists(json, 'addressAdditional3') ? undefined : json['addressAdditional3'],
        'zipCode': !exists(json, 'zipCode') ? undefined : json['zipCode'],
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function DeliveryAddressToJSON(value?: DeliveryAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'city': value.city,
        'Country': value.country,
        'addressAdditional1': value.addressAdditional1,
        'addressAdditional2': value.addressAdditional2,
        'addressAdditional3': value.addressAdditional3,
        'zipCode': value.zipCode,
        'state': value.state,
    };
}

