/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionsHistoryInput
 */
export interface TransactionsHistoryInput {
    /**
     * UTC Unix timestamp
     * In order to return transactions initialized after startDate.
     * If the payment account is a <b>SC Wallet</b> then this value is mandatory.
     * @type {string}
     * @memberof TransactionsHistoryInput
     */
    startDate?: string;
    /**
     * UTC Unix timestamp
     * In order to return transactions initialized before endDate.
     * If the payment account is a <b>SC Wallet</b> then this value is mandatory and the time span cannot exceed 1 week.
     * @type {string}
     * @memberof TransactionsHistoryInput
     */
    endDate?: string;
    /**
     * UTC Unix timestamp
     * In order to return transactions Executed after endDate.
     * If the payment account is a <b>SC Wallet</b> then this value is mandatory and the time span cannot exceed 1 week.
     * @type {string}
     * @memberof TransactionsHistoryInput
     */
    executionDateStart?: string;
    /**
     * UTC Unix timestamp
     * In order to return transactions Executed before endDate
     * If the payment account is a <b>SC Wallet</b> then this value is mandatory and the time span cannot exceed 1 week.
     * @type {string}
     * @memberof TransactionsHistoryInput
     */
    executionDateEnd?: string;
}

/**
 * Check if a given object implements the TransactionsHistoryInput interface.
 */
export function instanceOfTransactionsHistoryInput(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionsHistoryInputFromJSON(json: any): TransactionsHistoryInput {
    return TransactionsHistoryInputFromJSONTyped(json, false);
}

export function TransactionsHistoryInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsHistoryInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'executionDateStart': !exists(json, 'executionDateStart') ? undefined : json['executionDateStart'],
        'executionDateEnd': !exists(json, 'executionDateEnd') ? undefined : json['executionDateEnd'],
    };
}

export function TransactionsHistoryInputToJSON(value?: TransactionsHistoryInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startDate': value.startDate,
        'endDate': value.endDate,
        'executionDateStart': value.executionDateStart,
        'executionDateEnd': value.executionDateEnd,
    };
}

