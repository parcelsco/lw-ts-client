/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LemonWayCommission
 */
export interface LemonWayCommission {
    /**
     * 
     * @type {string}
     * @memberof LemonWayCommission
     */
    idp2p?: string;
    /**
     * Amounts are represented as integer in cents (Euro)
     * Represented as an integer in cents (Ero)
     * @type {number}
     * @memberof LemonWayCommission
     */
    amount?: number;
}

/**
 * Check if a given object implements the LemonWayCommission interface.
 */
export function instanceOfLemonWayCommission(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LemonWayCommissionFromJSON(json: any): LemonWayCommission {
    return LemonWayCommissionFromJSONTyped(json, false);
}

export function LemonWayCommissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): LemonWayCommission {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'idp2p': !exists(json, 'idp2p') ? undefined : json['idp2p'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
    };
}

export function LemonWayCommissionToJSON(value?: LemonWayCommission | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'idp2p': value.idp2p,
        'amount': value.amount,
    };
}

