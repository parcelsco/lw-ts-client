/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Card
 */
export interface Card {
    /**
     * 
     * @type {number}
     * @memberof Card
     */
    id?: number;
    /**
     * Card with 3-DS authentication
     * @type {boolean}
     * @memberof Card
     */
    is3DS?: boolean;
    /**
     * Country that issued the card
     * @type {string}
     * @memberof Card
     */
    country?: string;
    /**
     * Authorization number
     * @type {string}
     * @memberof Card
     */
    authorizationNumber?: string;
    /**
     * Masked card number
     * @type {string}
     * @memberof Card
     */
    maskedNumber?: string;
    /**
     * Expiration date if available
     * @type {string}
     * @memberof Card
     */
    expiration?: string;
    /**
     * Card type example: Visa or Mastercard
     * @type {string}
     * @memberof Card
     */
    type?: string;
    /**
     * Card is registered
     * @type {boolean}
     * @memberof Card
     */
    isRegistered?: boolean;
}

/**
 * Check if a given object implements the Card interface.
 */
export function instanceOfCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CardFromJSON(json: any): Card {
    return CardFromJSONTyped(json, false);
}

export function CardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Card {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'is3DS': !exists(json, 'is3DS') ? undefined : json['is3DS'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'authorizationNumber': !exists(json, 'authorizationNumber') ? undefined : json['authorizationNumber'],
        'maskedNumber': !exists(json, 'maskedNumber') ? undefined : json['maskedNumber'],
        'expiration': !exists(json, 'expiration') ? undefined : json['expiration'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'isRegistered': !exists(json, 'isRegistered') ? undefined : json['isRegistered'],
    };
}

export function CardToJSON(value?: Card | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'is3DS': value.is3DS,
        'country': value.country,
        'authorizationNumber': value.authorizationNumber,
        'maskedNumber': value.maskedNumber,
        'expiration': value.expiration,
        'type': value.type,
        'isRegistered': value.isRegistered,
    };
}

