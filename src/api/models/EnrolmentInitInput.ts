/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EnrolmentInitInput
 */
export interface EnrolmentInitInput {
    /**
     * Identification provider<br/>0 = Deutsche Post POSTIDENT.<br/>
     * @type {number}
     * @memberof EnrolmentInitInput
     */
    provider: EnrolmentInitInputProviderEnum;
    /**
     * Forwarding URL to which in case of a successful identification should be forwarded
     * @type {string}
     * @memberof EnrolmentInitInput
     */
    successUrl?: string;
    /**
     * Forwarding URL to which in case of an unsuccessful identification should be forwarded
     * @type {string}
     * @memberof EnrolmentInitInput
     */
    declinedUrl?: string;
    /**
     * Forwarding URL to forward to when the coupon has been downloaded
     * @type {string}
     * @memberof EnrolmentInitInput
     */
    couponRequestedUrl?: string;
    /**
     * Forwarding URL to forward to when the coupon has been downloaded
     * @type {string}
     * @memberof EnrolmentInitInput
     */
    reviewPendingUrl?: string;
    /**
     * Forwarding URL to which in case of incomplete identification should be forwarded
     * @type {string}
     * @memberof EnrolmentInitInput
     */
    incompleteUrl?: string;
}


/**
 * @export
 */
export const EnrolmentInitInputProviderEnum = {
    NUMBER_0: 0
} as const;
export type EnrolmentInitInputProviderEnum = typeof EnrolmentInitInputProviderEnum[keyof typeof EnrolmentInitInputProviderEnum];


/**
 * Check if a given object implements the EnrolmentInitInput interface.
 */
export function instanceOfEnrolmentInitInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "provider" in value;

    return isInstance;
}

export function EnrolmentInitInputFromJSON(json: any): EnrolmentInitInput {
    return EnrolmentInitInputFromJSONTyped(json, false);
}

export function EnrolmentInitInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrolmentInitInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'provider': json['Provider'],
        'successUrl': !exists(json, 'successUrl') ? undefined : json['successUrl'],
        'declinedUrl': !exists(json, 'declinedUrl') ? undefined : json['declinedUrl'],
        'couponRequestedUrl': !exists(json, 'couponRequestedUrl') ? undefined : json['couponRequestedUrl'],
        'reviewPendingUrl': !exists(json, 'reviewPendingUrl') ? undefined : json['reviewPendingUrl'],
        'incompleteUrl': !exists(json, 'incompleteUrl') ? undefined : json['incompleteUrl'],
    };
}

export function EnrolmentInitInputToJSON(value?: EnrolmentInitInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Provider': value.provider,
        'successUrl': value.successUrl,
        'declinedUrl': value.declinedUrl,
        'couponRequestedUrl': value.couponRequestedUrl,
        'reviewPendingUrl': value.reviewPendingUrl,
        'incompleteUrl': value.incompleteUrl,
    };
}

