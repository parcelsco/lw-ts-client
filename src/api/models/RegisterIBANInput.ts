/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterIBANInput
 */
export interface RegisterIBANInput {
    /**
     * Payment Account ID
     * @type {string}
     * @memberof RegisterIBANInput
     */
    accountId: string;
    /**
     * Registered Bank Account Owner: First and Last name, or Company Name
     * @type {string}
     * @memberof RegisterIBANInput
     */
    holder: string;
    /**
     * BIC/SWIFT Codes are arranged like this : AAAABBCCDDD
     * AAAA : 4 char for bank code
     * BB : 2 char for country code
     * CC : 2 char for location code
     * DDD : 3 char for branch code
     * @type {string}
     * @memberof RegisterIBANInput
     */
    bic?: string;
    /**
     * IBAN
     * @type {string}
     * @memberof RegisterIBANInput
     */
    iban: string;
    /**
     * Bank Address Line 1
     * @type {string}
     * @memberof RegisterIBANInput
     */
    domiciliation1?: string;
    /**
     * Bank Address Line 2
     * @type {string}
     * @memberof RegisterIBANInput
     */
    domiciliation2?: string;
    /**
     * Reason for new IBAN if another IBAN is already linked to the Payment Account
     * @type {string}
     * @memberof RegisterIBANInput
     */
    comment?: string;
}

/**
 * Check if a given object implements the RegisterIBANInput interface.
 */
export function instanceOfRegisterIBANInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "holder" in value;
    isInstance = isInstance && "iban" in value;

    return isInstance;
}

export function RegisterIBANInputFromJSON(json: any): RegisterIBANInput {
    return RegisterIBANInputFromJSONTyped(json, false);
}

export function RegisterIBANInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterIBANInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'holder': json['holder'],
        'bic': !exists(json, 'bic') ? undefined : json['bic'],
        'iban': json['iban'],
        'domiciliation1': !exists(json, 'domiciliation1') ? undefined : json['domiciliation1'],
        'domiciliation2': !exists(json, 'domiciliation2') ? undefined : json['domiciliation2'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function RegisterIBANInputToJSON(value?: RegisterIBANInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'holder': value.holder,
        'bic': value.bic,
        'iban': value.iban,
        'domiciliation1': value.domiciliation1,
        'domiciliation2': value.domiciliation2,
        'comment': value.comment,
    };
}

