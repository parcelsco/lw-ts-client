/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Bank
 */
export interface Bank {
    /**
     * This the the country code asscoiated with the payment bank. ISO Alpha-2 codes accepted: (FR) France, (ES) - Spain (DE), (IT) Italy, Germany,(GB) - United Kingdom ,(PT) Portugal and (SE) Sweden
     * @type {string}
     * @memberof Bank
     */
    countryCode?: string;
    /**
     * The bank's parent company name. Example: Banque Populaire
     * @type {string}
     * @memberof Bank
     */
    parentName?: string;
    /**
     * A weblink to the bank's logo
     * @type {string}
     * @memberof Bank
     */
    logoURL?: string;
    /**
     * This is the bank name. Example: Banque Populaire Alsace Lorraine
     * @type {string}
     * @memberof Bank
     */
    bankName?: string;
    /**
     * This is the unique bankId associated with the bank.
     * @type {string}
     * @memberof Bank
     */
    bankId?: string;
    /**
     * Personal or Business Acoount
     * @type {Array<string>}
     * @memberof Bank
     */
    segments?: Array<string>;
}

/**
 * Check if a given object implements the Bank interface.
 */
export function instanceOfBank(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BankFromJSON(json: any): Bank {
    return BankFromJSONTyped(json, false);
}

export function BankFromJSONTyped(json: any, ignoreDiscriminator: boolean): Bank {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'parentName': !exists(json, 'parentName') ? undefined : json['parentName'],
        'logoURL': !exists(json, 'logoURL') ? undefined : json['logoURL'],
        'bankName': !exists(json, 'bankName') ? undefined : json['bankName'],
        'bankId': !exists(json, 'bankId') ? undefined : json['bankId'],
        'segments': !exists(json, 'segments') ? undefined : json['segments'],
    };
}

export function BankToJSON(value?: Bank | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryCode': value.countryCode,
        'parentName': value.parentName,
        'logoURL': value.logoURL,
        'bankName': value.bankName,
        'bankId': value.bankId,
        'segments': value.segments,
    };
}

