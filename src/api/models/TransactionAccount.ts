/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionIn } from './TransactionIn';
import {
    TransactionInFromJSON,
    TransactionInFromJSONTyped,
    TransactionInToJSON,
} from './TransactionIn';
import type { TransactionOut } from './TransactionOut';
import {
    TransactionOutFromJSON,
    TransactionOutFromJSONTyped,
    TransactionOutToJSON,
} from './TransactionOut';
import type { TransactionP2P } from './TransactionP2P';
import {
    TransactionP2PFromJSON,
    TransactionP2PFromJSONTyped,
    TransactionP2PToJSON,
} from './TransactionP2P';

/**
 * 
 * @export
 * @interface TransactionAccount
 */
export interface TransactionAccount {
    /**
     * 
     * @type {TransactionIn}
     * @memberof TransactionAccount
     */
    transactionIn?: TransactionIn;
    /**
     * 
     * @type {TransactionOut}
     * @memberof TransactionAccount
     */
    transactionOut?: TransactionOut;
    /**
     * 
     * @type {TransactionP2P}
     * @memberof TransactionAccount
     */
    transactionP2P?: TransactionP2P;
}

/**
 * Check if a given object implements the TransactionAccount interface.
 */
export function instanceOfTransactionAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionAccountFromJSON(json: any): TransactionAccount {
    return TransactionAccountFromJSONTyped(json, false);
}

export function TransactionAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactionIn': !exists(json, 'transactionIn') ? undefined : TransactionInFromJSON(json['transactionIn']),
        'transactionOut': !exists(json, 'transactionOut') ? undefined : TransactionOutFromJSON(json['transactionOut']),
        'transactionP2P': !exists(json, 'transactionP2P') ? undefined : TransactionP2PFromJSON(json['transactionP2P']),
    };
}

export function TransactionAccountToJSON(value?: TransactionAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactionIn': TransactionInToJSON(value.transactionIn),
        'transactionOut': TransactionOutToJSON(value.transactionOut),
        'transactionP2P': TransactionP2PToJSON(value.transactionP2P),
    };
}

