/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Document } from './Document';
import {
    DocumentFromJSON,
    DocumentFromJSONTyped,
    DocumentToJSON,
} from './Document';
import type { Iban } from './Iban';
import {
    IbanFromJSON,
    IbanFromJSONTyped,
    IbanToJSON,
} from './Iban';
import type { SddMandate } from './SddMandate';
import {
    SddMandateFromJSON,
    SddMandateFromJSONTyped,
    SddMandateToJSON,
} from './SddMandate';

/**
 * 
 * @export
 * @interface AccountKycStatus
 */
export interface AccountKycStatus {
    /**
     * Payment account ID
     * @type {string}
     * @memberof AccountKycStatus
     */
    id?: string;
    /**
     * Payment account status<br/>2 = Registered, KYC incomplete.<br/>3 = Registered, rejected KYC.<br/>5 = Registered, KYC 1 (status given at registration).<br/>6 = Registered, KYC 2.<br/>7 = Registered, KYC 3.<br/>8 = Registered, expired KYC.<br/>10 = Blocked.<br/>12 = Closed.<br/>13 = Registered, status is being updated from KYC 2 to KYC 3.<br/>14 = One-time customer.<br/>15 = Special account for crowdlending.<br/>16 = Technical account.<br/>
     * @type {number}
     * @memberof AccountKycStatus
     */
    status?: AccountKycStatusStatusEnum;
    /**
     * Modification date of the payment account status in Second UTC
     * @type {string}
     * @memberof AccountKycStatus
     */
    date?: string;
    /**
     * 
     * @type {Array<Document>}
     * @memberof AccountKycStatus
     */
    documents?: Array<Document>;
    /**
     * 
     * @type {Array<Iban>}
     * @memberof AccountKycStatus
     */
    ibans?: Array<Iban>;
    /**
     * 
     * @type {Array<SddMandate>}
     * @memberof AccountKycStatus
     */
    sddMandates?: Array<SddMandate>;
}


/**
 * @export
 */
export const AccountKycStatusStatusEnum = {
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_5: 5,
    NUMBER_6: 6,
    NUMBER_7: 7,
    NUMBER_8: 8,
    NUMBER_10: 10,
    NUMBER_12: 12,
    NUMBER_13: 13,
    NUMBER_14: 14,
    NUMBER_15: 15,
    NUMBER_16: 16
} as const;
export type AccountKycStatusStatusEnum = typeof AccountKycStatusStatusEnum[keyof typeof AccountKycStatusStatusEnum];


/**
 * Check if a given object implements the AccountKycStatus interface.
 */
export function instanceOfAccountKycStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountKycStatusFromJSON(json: any): AccountKycStatus {
    return AccountKycStatusFromJSONTyped(json, false);
}

export function AccountKycStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountKycStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'documents': !exists(json, 'documents') ? undefined : ((json['documents'] as Array<any>).map(DocumentFromJSON)),
        'ibans': !exists(json, 'ibans') ? undefined : ((json['ibans'] as Array<any>).map(IbanFromJSON)),
        'sddMandates': !exists(json, 'sddMandates') ? undefined : ((json['sddMandates'] as Array<any>).map(SddMandateFromJSON)),
    };
}

export function AccountKycStatusToJSON(value?: AccountKycStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'status': value.status,
        'date': value.date,
        'documents': value.documents === undefined ? undefined : ((value.documents as Array<any>).map(DocumentToJSON)),
        'ibans': value.ibans === undefined ? undefined : ((value.ibans as Array<any>).map(IbanToJSON)),
        'sddMandates': value.sddMandates === undefined ? undefined : ((value.sddMandates as Array<any>).map(SddMandateToJSON)),
    };
}

