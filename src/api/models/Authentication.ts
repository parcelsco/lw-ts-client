/* tslint:disable */
/* eslint-disable */
/**
 * Lemonway DirectKit API 2.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Authentication
 */
export interface Authentication {
    /**
     * Possible Authentication Methods: <br />
     * - NOAUTHENT = 1 - No authentication of the customer by the merchant                                                     
     * - OWNCREDENTIAL = 2 - Customer authentication by the merchant using his own system                                          
     * - FEDERATEDID = 3 - Customer authentication by the merchant using an identifier federated(facebook, ...) (e.g.Facebook)  
     * - ISSUERID = 4 - Customer authentication by the merchant using information of the issuer's payment mean                
     * - THIRDPARTY = 5 - Customer authentication by the merchant using a third system                                          
     * - FIDO = 6 - Customer authentication by the merchant with FIDO(Fast IDentity Online) system
     * @type {string}
     * @memberof Authentication
     */
    merchantCustomerAuthentMethod?: string;
    /**
     * ISO8601 date time format
     * @type {string}
     * @memberof Authentication
     */
    merchantCustomerAuthentDateTime?: string;
}

/**
 * Check if a given object implements the Authentication interface.
 */
export function instanceOfAuthentication(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthenticationFromJSON(json: any): Authentication {
    return AuthenticationFromJSONTyped(json, false);
}

export function AuthenticationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authentication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'merchantCustomerAuthentMethod': !exists(json, 'merchantCustomerAuthentMethod') ? undefined : json['merchantCustomerAuthentMethod'],
        'merchantCustomerAuthentDateTime': !exists(json, 'merchantCustomerAuthentDateTime') ? undefined : json['merchantCustomerAuthentDateTime'],
    };
}

export function AuthenticationToJSON(value?: Authentication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'merchantCustomerAuthentMethod': value.merchantCustomerAuthentMethod,
        'merchantCustomerAuthentDateTime': value.merchantCustomerAuthentDateTime,
    };
}

